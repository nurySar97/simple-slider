{"version":3,"sources":["data.js","ReactSlider/utils/index.js","ReactSlider/functions/eventHandlers.js","ReactSlider/index.js","ReactSlider/utils/keyGenerator.js","ReactSlider/functions/index.js","App.js","index.js"],"names":["data","id","image","transition","s","translateX","value","_onHandleMouseUp","clientX","memory","sliderCardsWidth","slideEventHandler","setSliderTrackStyles","prevSliderTrackStyles","sliderTrack","_DIFERENCE","current","type","coefficient","onmousemove","SimpleSlider","children","direction","frequency","freq","COUNT_OF_CHILDS","length","memorizedChilds","useMemo","array","memorizedKeys","_keys","i","push","nextId","keyGenerator","useRef","MOUSE_DOWN_X","MOUSE_MOVE_X","MOUSE_DOWN_CLIENT_X","counter","isBlocked","sliderCards","useState","isLoaded","setIsLoaded","setSliderCardsWidth","sliderTrackStyles","interval","setHandleAutoControl","useCallback","_SLIDER_CARDS_WIDTH","clientWidth","_TRANSFORM","_REMAINDER","width","transform","transformValue","_SLIDER_CARDS_ROUNDED_WIDTH","_setHandleAutoControl","coef","setTimeout","prev","_slideEventHandler","onHandleMouseMove","_onHandleMouseMove","onHandleMouseUp","onmouseout","e","onHandleTouchMove","changedTouches","Math","round","_onHandleTouchMove","useEffect","window","addEventListener","removeEventListener","setInterval","clearInterval","className","onClick","ref","style","onMouseDown","onHandleMouseOut","_onHandleMouseDown","onMouseUp","onTouchStart","ontouchmove","_onHandleTouchStart","onTouchEnd","_onHandleTouchEnd","Children","map","Item","index","App","item","src","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2490862c.chunk.js","sourcesContent":["const data = [\r\n    { id: 1, image: \"https://mediumrare.imgix.net/d7f44d827ca3824ec58930b8b2ebff0197cb26d2926068695386cfa5b456a9f7?auto=compress&q=30&w=720&dpr=2\" },\r\n    { id: 2, image: \"https://mediumrare.imgix.net/ec524542538231432741801a0877a447af93c643d26ce9028705564ddb48db3d?auto=compress&q=30&w=720&dpr=2\" },\r\n    { id: 3, image: \"https://mediumrare.imgix.net/50caaf40a9c41a8a1bdcac1571f901fceb4faad1efc29badcae647d56269c09f?auto=compress&q=30&w=720&dpr=2\" },\r\n    { id: 4, image: \"https://mediumrare.imgix.net/4cd735f00e498513b1bfad2e66543995a97211c1ce0d300cafd937c79dd26db6?auto=compress&q=30&w=720&dpr=2\" },\r\n    { id: 5, image: \"https://mediumrare.imgix.net/29accf806f194840c94f80507d9132842f4d9223d551114ca92996a2eb713670?auto=compress&q=30&w=720&dpr=2\" },\r\n    { id: 6, image: \"https://mediumrare.imgix.net/eb5800450d695dcf75a662619fa59821f596dbe7019b340724319e0953fbfdbf?auto=compress&q=30&w=720&dpr=1.25\" },\r\n    { id: 7, image: \"https://mediumrare.imgix.net/748305db7743710616af499063a2e2d1a4f650943c9cf387d106cda26a897e0e?auto=compress&q=30&w=720&dpr=1.25\" },\r\n    { id: 8, image: \"https://mediumrare.imgix.net/1fbe2494643467b2abb270e83287e489f024b63c80df7ddac96974b49b3ecfe6?auto=compress&q=30&w=720&dpr=1.25\" },\r\n    { id: 9, image: \"https://mediumrare.imgix.net/22884ee9a11daaf0066a89d0ac8e34113fe3962aee553a87eb7dfacbd5e5d60b?auto=compress&q=30&w=720&dpr=1.25\" },\r\n    { id: 10, image: \"https://mediumrare.imgix.net/a2bc965d85f03ba0e8400ad4b52611e57586de720c67b2816d0c74c570c0c093?auto=compress&q=30&w=720&dpr=1.25\" }\r\n  ]\r\nexport default data","export let multiplyArray = array => [...array, ...array, ...array, ...array, ...array];\r\nexport let transition = (s = 0) => `all ${s}ms linear`;\r\nexport let translateX = (value = 0) => `translateX(${value}px)`;","import { transition, translateX } from \"../utils\";\r\n\r\n\r\nexport const _onHandleMouseDown = (\r\n    clientX,\r\n    prevSliderTrackStyles,\r\n    sliderTrackStyles,\r\n    sliderTrack,\r\n    onHandleMouseMove,\r\n    memory\r\n) => {\r\n    prevSliderTrackStyles.current = sliderTrackStyles;\r\n    memory.current['MOUSE_DOWN_X'] = clientX - sliderTrackStyles.transformValue;\r\n    memory.current['MOUSE_DOWN_CLIENT_X'] = clientX;\r\n    sliderTrack.current.onmousemove = e => onHandleMouseMove(e);\r\n}\r\n\r\n\r\nexport const _onHandleMouseMove = (\r\n    clientX,\r\n    setSliderTrackStyles,\r\n    memory\r\n) => {\r\n    setSliderTrackStyles(prev => {\r\n        return {\r\n            ...prev,\r\n            transform: translateX(clientX - memory.current['MOUSE_DOWN_X']),\r\n            transformValue: clientX - memory.current['MOUSE_DOWN_X'],\r\n            transition: transition()\r\n        }\r\n    })\r\n\r\n}\r\n\r\n\r\nexport const _onHandleMouseUp = (\r\n    clientX,\r\n    memory,\r\n    sliderCardsWidth,\r\n    slideEventHandler,\r\n    setSliderTrackStyles,\r\n    prevSliderTrackStyles,\r\n    sliderTrack\r\n) => {\r\n    const _DIFERENCE = clientX - memory.current['MOUSE_DOWN_CLIENT_X'];\r\n\r\n    if (_DIFERENCE > 0) {\r\n        if (_DIFERENCE > sliderCardsWidth / 4) {\r\n            slideEventHandler({ type: \"next\", coefficient: 1 }, prevSliderTrackStyles);\r\n        } else {\r\n            setSliderTrackStyles({ ...prevSliderTrackStyles.current, transition: transition(200) });\r\n        }\r\n    } else {\r\n        if (_DIFERENCE < -sliderCardsWidth / 4) {\r\n            slideEventHandler({ type: \"prev\", coefficient: -1 }, prevSliderTrackStyles);\r\n        } else {\r\n            setSliderTrackStyles({ ...prevSliderTrackStyles.current, transition: transition(200) });\r\n        }\r\n    }\r\n    sliderTrack.current.onmousemove = () => null;\r\n}\r\n\r\n\r\nexport const _onHandleTouchStart = (\r\n    e,\r\n    sliderTrack,\r\n    onHandleTouchMove,\r\n    memory,\r\n    sliderTrackStyles,\r\n    prevSliderTrackStyles\r\n) => {\r\n    prevSliderTrackStyles.current = sliderTrackStyles;\r\n    const clientX = (e.changedTouches[0].clientX);\r\n    memory.current['MOUSE_DOWN_X'] = clientX - sliderTrackStyles.transformValue;\r\n    memory.current['MOUSE_DOWN_CLIENT_X'] = clientX;\r\n    sliderTrack.current.ontouchmove = e => onHandleTouchMove(e);\r\n}\r\n\r\n\r\nexport const _onHandleTouchMove = (\r\n    e,\r\n    setSliderTrackStyles,\r\n    memory\r\n) => {\r\n    const clientX = (e.changedTouches[0].clientX);\r\n\r\n    setSliderTrackStyles(prev => {\r\n        return {\r\n            ...prev,\r\n            transform: translateX(Math.round(clientX) - memory.current['MOUSE_DOWN_X']),\r\n            transformValue: Math.round(clientX) - memory.current['MOUSE_DOWN_X'],\r\n            transition: transition()\r\n        }\r\n    })\r\n}\r\n\r\nexport const _onHandleTouchEnd = (\r\n    e,\r\n    sliderTrack,\r\n    memory,\r\n    sliderCardsWidth,\r\n    slideEventHandler,\r\n    setSliderTrackStyles,\r\n    prevSliderTrackStyles\r\n) => {\r\n    const clientX = (e.changedTouches[0].clientX);\r\n    const _DIFERENCE = clientX - memory.current['MOUSE_DOWN_CLIENT_X'];\r\n\r\n    if (_DIFERENCE > 0) {\r\n        if (_DIFERENCE > sliderCardsWidth / 4) {\r\n            slideEventHandler({ type: \"next\", coefficient: 1 }, prevSliderTrackStyles);\r\n        } else {\r\n            setSliderTrackStyles({ ...prevSliderTrackStyles.current, transition: transition(200) });\r\n        }\r\n    } else {\r\n        if (_DIFERENCE < -sliderCardsWidth / 4) {\r\n            slideEventHandler({ type: \"prev\", coefficient: -1 }, prevSliderTrackStyles);\r\n        } else {\r\n            setSliderTrackStyles({ ...prevSliderTrackStyles.current, transition: transition(200) });\r\n        }\r\n    }\r\n\r\n    sliderTrack.current.ontouchmove = () => null;\r\n}","import \"./styles.scss\";\r\nimport { multiplyArray } from \"./utils\";\r\nimport { keyGenerator } from \"./utils/keyGenerator\";\r\nimport { _setHandleAutoControl, _slideEventHandler } from \"./functions\";\r\nimport React, { Children, useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport {\r\n    _onHandleMouseDown,\r\n    _onHandleMouseMove,\r\n    _onHandleMouseUp,\r\n    _onHandleTouchEnd,\r\n    _onHandleTouchMove,\r\n    _onHandleTouchStart\r\n} from \"./functions/eventHandlers\";\r\n\r\nconst SimpleSlider = ({\r\n    children,\r\n    direction = \"left\",\r\n    frequency = 0\r\n}) => {\r\n    let freq = (frequency === 0) ? 0 : (frequency < 300) ? 300 : frequency;\r\n    // Variables start\r\n    const COUNT_OF_CHILDS = children?.length || 0;\r\n    let memorizedChilds = useMemo(() => children && multiplyArray(children), [children]);\r\n    let memorizedKeys = useMemo(() => keyGenerator(COUNT_OF_CHILDS), [COUNT_OF_CHILDS]);\r\n    const memory = useRef({\r\n        MOUSE_DOWN_X: 0,\r\n        MOUSE_MOVE_X: 0,\r\n        MOUSE_DOWN_CLIENT_X: 0\r\n    });\r\n    const counter = useRef(0);\r\n    const isBlocked = useRef(false);\r\n    const sliderCards = useRef(null);\r\n    const sliderTrack = useRef(null);\r\n    const prevSliderTrackStyles = useRef({});\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [sliderCardsWidth, setSliderCardsWidth] = useState(0);\r\n    const [sliderTrackStyles, setSliderTrackStyles] = useState({});\r\n    const interval = useRef(null);\r\n    // Variables End\r\n\r\n    // RETURN DEFAULT\r\n    const setHandleAutoControl = useCallback(() => {\r\n        _setHandleAutoControl(\r\n            counter,\r\n            sliderCards,\r\n            COUNT_OF_CHILDS,\r\n            setSliderCardsWidth,\r\n            setSliderTrackStyles,\r\n            prevSliderTrackStyles\r\n        )\r\n    }, [COUNT_OF_CHILDS]);\r\n\r\n    // BUTTON HANDLER \r\n    const slideEventHandler = useCallback(({ type, coefficient: coef }, prevSliderTrackStyles) => {\r\n        _slideEventHandler(\r\n            type,\r\n            coef,\r\n            isBlocked,\r\n            counter,\r\n            setHandleAutoControl,\r\n            setSliderTrackStyles,\r\n            sliderCardsWidth,\r\n            COUNT_OF_CHILDS,\r\n            prevSliderTrackStyles\r\n        )\r\n    }, [COUNT_OF_CHILDS, sliderCardsWidth, setHandleAutoControl]);\r\n\r\n    // MOUSE OUT\r\n    const onHandleMouseOut = ({ clientX }) => {\r\n        _onHandleMouseUp(\r\n            clientX,\r\n            memory,\r\n            sliderCardsWidth,\r\n            slideEventHandler,\r\n            setSliderTrackStyles,\r\n            prevSliderTrackStyles,\r\n            sliderTrack\r\n        )\r\n        sliderTrack.current.onmousemove = () => null;\r\n    }\r\n\r\n    // MOUSE DOWN\r\n    const onHandleMouseDown = ({ clientX }) => {\r\n        sliderTrack.current.onmouseout = e => onHandleMouseOut(e);\r\n        _onHandleMouseDown(\r\n            clientX,\r\n            prevSliderTrackStyles,\r\n            sliderTrackStyles,\r\n            sliderTrack,\r\n            onHandleMouseMove,\r\n            memory\r\n        )\r\n    }\r\n\r\n    // MOUSE MOVE\r\n    function onHandleMouseMove({ clientX }) {\r\n        _onHandleMouseMove(clientX, setSliderTrackStyles, memory)\r\n    }\r\n\r\n    // MOUSE UP\r\n    const onHandleMouseUp = useCallback(({ clientX }) => {\r\n        sliderTrack.current.onmouseout = e => null;\r\n        _onHandleMouseUp(\r\n            clientX,\r\n            memory,\r\n            sliderCardsWidth,\r\n            slideEventHandler,\r\n            setSliderTrackStyles,\r\n            prevSliderTrackStyles,\r\n            sliderTrack\r\n        )\r\n    }, [slideEventHandler, sliderCardsWidth]);\r\n\r\n    // TOUCH START\r\n    const onHandleTouchStart = e => {\r\n        _onHandleTouchStart(\r\n            e,\r\n            sliderTrack,\r\n            onHandleTouchMove,\r\n            memory,\r\n            sliderTrackStyles,\r\n            prevSliderTrackStyles\r\n        )\r\n    }\r\n\r\n    // TOUCH MOVE\r\n    function onHandleTouchMove(e) {\r\n        _onHandleTouchMove(e, setSliderTrackStyles, memory)\r\n    }\r\n\r\n    // TOUCH END\r\n    const onHandleTouchEnd = (e) => {\r\n        _onHandleTouchEnd(\r\n            e,\r\n            sliderTrack,\r\n            memory,\r\n            sliderCardsWidth,\r\n            slideEventHandler,\r\n            setSliderTrackStyles,\r\n            prevSliderTrackStyles\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (children) {\r\n            setIsLoaded(() => true);\r\n            setHandleAutoControl();\r\n            window.addEventListener(\"resize\", setHandleAutoControl);\r\n\r\n            return () => {\r\n                window.removeEventListener('resize', setHandleAutoControl);\r\n            }\r\n        }\r\n    }, [setHandleAutoControl, children]);\r\n\r\n    useEffect(() => {\r\n        interval.current = setInterval(() => {\r\n            if (freq !== 0) {\r\n                slideEventHandler(\r\n                    direction === \"left\"\r\n                        ? ({ type: \"prev\", coefficient: -1 })\r\n                        : ({ type: \"next\", coefficient: 1 })\r\n                )\r\n            }\r\n        }, freq)\r\n\r\n        return () => clearInterval(interval.current);\r\n    }, [slideEventHandler, freq, direction]);\r\n\r\n    return (\r\n        <div className='container'>\r\n            {\r\n                children\r\n                &&\r\n                <section className=\"simple-slider\">\r\n                    <div className=\"simple-slider__inner\">\r\n\r\n                        <button\r\n                            className='simple-slider__btn simple-slider__bnt--next'\r\n                            onClick={() => slideEventHandler({ type: \"next\", coefficient: 1 })}\r\n                        >\r\n                            Next\r\n                        </button>\r\n\r\n                        <div\r\n                            className=\"simple-slider__cards\"\r\n                            ref={sliderCards}\r\n                        >\r\n                            <div\r\n                                style={sliderTrackStyles}\r\n                                className=\"simple-slider__track\"\r\n                                ref={sliderTrack}\r\n                                onMouseDown={onHandleMouseDown}\r\n                                onMouseUp={onHandleMouseUp}\r\n                                onTouchStart={onHandleTouchStart}\r\n                                onTouchEnd={onHandleTouchEnd}\r\n\r\n                            >\r\n                                {\r\n                                    isLoaded\r\n                                    &&\r\n                                    Children.map(memorizedChilds, (Item, index) => {\r\n                                        return <div\r\n                                            className='simple-slider__card'\r\n                                            key={memorizedKeys[index]}\r\n                                            style={{ width: (sliderCardsWidth / 2) }}\r\n                                        >\r\n                                            {Item}\r\n                                        </div>\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button\r\n                            className='simple-slider__bnt simple-slider__bnt--prev'\r\n                            onClick={() => slideEventHandler({ type: \"prev\", coefficient: -1 })}\r\n                        >\r\n                            Previous\r\n                        </button>\r\n\r\n                    </div>\r\n                </section>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SimpleSlider;","import nextId from \"react-id-generator\";\r\n\r\nexport function keyGenerator(COUNT_OF_CHILDS) {\r\n    let _keys = [];\r\n    for (let i = 0; i < COUNT_OF_CHILDS * 5; i++) {\r\n        _keys.push(nextId())\r\n    }\r\n    return _keys\r\n}","import { transition, translateX } from \"../utils\";\r\n\r\nexport const _slideEventHandler = (\r\n    type,\r\n    coef,\r\n    isBlocked,\r\n    counter,\r\n    setHandleAutoControl,\r\n    setSliderTrackStyles,\r\n    sliderCardsWidth,\r\n    COUNT_OF_CHILDS,\r\n    prevSliderTrackStyles) => {\r\n\r\n    if (isBlocked.current) return;\r\n    isBlocked.current = true;\r\n    setTimeout(() => { isBlocked.current = false; }, 220)\r\n\r\n    counter.current = counter.current + coef;\r\n\r\n    setSliderTrackStyles(prev => {\r\n        let _TRANSFORM = prevSliderTrackStyles\r\n            ? prevSliderTrackStyles.current.transformValue + coef * (sliderCardsWidth / 2)\r\n            : prev.transformValue + coef * (sliderCardsWidth / 2)\r\n\r\n        return {\r\n            ...prev,\r\n            transform: translateX(_TRANSFORM),\r\n            transformValue: _TRANSFORM,\r\n            transition: transition(200)\r\n        }\r\n    });\r\n\r\n    setTimeout(() => {\r\n        if (type === \"next\") {\r\n            if (counter.current === coef * (COUNT_OF_CHILDS)) {\r\n                counter.current = 0;\r\n                setHandleAutoControl();\r\n            }\r\n        } else {\r\n            if (counter.current === coef * COUNT_OF_CHILDS) {\r\n                counter.current = 0;\r\n                setHandleAutoControl();\r\n            }\r\n        }\r\n    }, 210)\r\n\r\n}\r\n\r\n\r\nexport const _setHandleAutoControl = (\r\n    counter,\r\n    sliderCards,\r\n    COUNT_OF_CHILDS,\r\n    setSliderCardsWidth,\r\n    setSliderTrackStyles,\r\n    prevSliderTrackStyles\r\n) => {\r\n    let { current: {\r\n        clientWidth: _SLIDER_CARDS_WIDTH\r\n    } } = sliderCards;\r\n    let _TRANSFORM = _SLIDER_CARDS_WIDTH / 2 * (counter.current + 1 / 2 - COUNT_OF_CHILDS * 2);\r\n    let _REMAINDER = _SLIDER_CARDS_WIDTH % 2;\r\n\r\n    if (_REMAINDER === 0) {\r\n        setSliderCardsWidth(_SLIDER_CARDS_WIDTH);\r\n\r\n        prevSliderTrackStyles.current = {\r\n            width: (_SLIDER_CARDS_WIDTH / 2) * COUNT_OF_CHILDS * 5,\r\n            transform: translateX(_TRANSFORM),\r\n            transformValue: _TRANSFORM,\r\n            transition: transition()\r\n        };\r\n\r\n        setSliderTrackStyles(() => prevSliderTrackStyles.current);\r\n        return\r\n    }\r\n\r\n    let _SLIDER_CARDS_ROUNDED_WIDTH = (_SLIDER_CARDS_WIDTH - _REMAINDER) / 2;\r\n    _TRANSFORM = _SLIDER_CARDS_ROUNDED_WIDTH * (-COUNT_OF_CHILDS * 2 + counter.current + 1 / 2);\r\n\r\n    prevSliderTrackStyles.current = {\r\n        width: _SLIDER_CARDS_ROUNDED_WIDTH * COUNT_OF_CHILDS * 5,\r\n        transform: translateX(_TRANSFORM),\r\n        transformValue: _TRANSFORM,\r\n        transition: transition()\r\n    }\r\n\r\n    setSliderCardsWidth(_SLIDER_CARDS_ROUNDED_WIDTH * 2);\r\n    setSliderTrackStyles(() => prevSliderTrackStyles.current);\r\n}","import React from 'react';\nimport data from './data';\nimport SimpleSlider from './ReactSlider';\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <SimpleSlider>\n        {\n          data.map(item => {\n            return <div key={item.id}>\n              <img className='slider__img' src={item.image} alt=\"\" />\n            </div>\n          })\n        }\n      </SimpleSlider>\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}